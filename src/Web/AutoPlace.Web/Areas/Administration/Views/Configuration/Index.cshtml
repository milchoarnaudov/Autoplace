@{
    this.ViewData["Title"] = "Configuration";
    var itemTypes = new String[]
{
        "Autopart Categories",
        "Autopart Conditions",
        "Car Manufacturers",
        "Car Models",
        "Car Types"
                                    };
}

@section css
{
    <link href="~/css/administration.css" rel="stylesheet" />
}

<div class="row">
    <div class="col-sm-6">
        <div class="card" width="50px">
            <div class="card-header">
                <span>Item Types</span>
            </div>
            <div class="list-group list-group-flush">
                @foreach (var itemType in itemTypes)
                {
                    <button class="list-group-item btn btn-light text-color-black selectItemBtn" value="@itemType">@itemType</button>
                }
            </div>
        </div>
    </div>
    <div class="col-sm-6">
        <div class="card" width="50px">
            <div class="card-header">
                <span>Item Type Values</span>
            </div>
            <div id="itemsList" class="list-group list-group-flush">

            </div>
            <div id="createForm" class="list-group-item d-flex justify-content-between">

            </div>
        </div>
    </div>
</div>

@section Scripts
{

    <script>
       function getToken() {
           var token = '@Html.AntiForgeryToken()';
           token = $(token).val();
           return token;
       }

       let token = getToken();

       function addEventListenerByClassName(className, func) {
           const elements = document.getElementsByClassName(className);
           for (let i = 0; i < elements.length; i++) {
               elements[i].addEventListener('click', function (e) {
                   if (e.target.value.includes(", ")) {
                       let values = e.target.value.split(", ");
                       func(values);
                   }
                   else {
                       func(e.target.value);
                   }
               })
           }
       }

       addEventListenerByClassName("selectItemBtn", selectItemType);

       function selectItemType(itemType) {
           let controllerName = itemType.replace(/\s/g, '');
           let itemsList = document.getElementById("itemsList");
           let createForm = document.getElementById("createForm");
           itemsList.innerHTML = "";
           fetch(`/api/administration/${controllerName}`)
               .then((response) => {
                   return response.json();
               })
               .then((data) => {
                   Array.prototype.forEach.call(data, function (item, i) {
                       itemsList.innerHTML += (`<div class="list-group-item d-flex justify-content-between text-color-black"><span>${item.value}</span><button class="deleteItemsBtn"  value="${controllerName}, ${item.key}">Delete</button></div>`);
                       addEventListenerByClassName("deleteItemsBtn", deleteItem);
                   });
               });
           createForm.innerHTML =
               `<label>Add Item Value</label>
                                   <div><input id="itemName"/>
                                   <button class="addItemBtn btn-add" value="${controllerName}">Add</button></div>`;
           addEventListenerByClassName("addItemBtn", addItem);
       }


       function addItem(controllerName) {
           let name = document.getElementById("itemName");
           name.style.borderColor = "";
           if (!/^[a-zA-Z\s]*$/.test(name.value) || name.value.length < 3) {
               name.style.borderColor = 'Red';
               return;
           }
           const formData = new FormData();
           formData.append("name", name.value);
           fetch(`/api/administration/${controllerName}`,
               {
                   method: "POST",
                   headers: {
                       'Accept': 'application/json; charset=utf-8',
                       'Content-Type': 'application/json;charset=UTF-8',
                       'RequestVerificationToken': token
                   },
                   body: JSON.stringify({ name: name.value, __RequestVerificationToken: token, })
               }).then((response) => {
                   selectItemType(controllerName);
               })

       }

       function deleteItem(values) {
           fetch(`/api/administration/${values[0]}/${values[1]}`,
               {
                   method: "DELETE",
                   headers: {
                       'RequestVerificationToken': token
                   },
                   body: JSON.stringify({ __RequestVerificationToken: token, })
               }).then((response) => {
                   selectItemType(values[0]);
               })
       }
    </script>
}
