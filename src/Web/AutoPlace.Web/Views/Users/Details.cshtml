@model UserDetailsViewModel

@{
    this.ViewData["Title"] = "Details";
}


<div class="container w-100">
    <div class="d-flex justify-content-between">
        <h1>@Model.Username</h1>
        <div class="votes-container d-flex justify-content-between">
            <div>
                <i @if (this.User.Identity.IsAuthenticated) { <text> id="upVote" </text> } class="fa fa-2x fa-thumbs-o-up @if (Model.IsCurrentUserVotedPositive) { <text>votes-positive-btn</text>}"></i>
                <span id="upVotesCount" class="votes-value">@Model.PositiveVotes</span>
            </div>
            <div class="stroke"></div>
            <div>
                <span id="downVotesCount" class="votes-value">@Model.NegativeVotes</span>
                <i @if (this.User.Identity.IsAuthenticated) { <text> id="downVote" </text> } class="fa fa-2x fa-thumbs-o-down @if (Model.IsCurrentUserVotedNegative) { <text>votes-negative-btn</text>}"></i>
            </div>
        </div>
    </div>
    <div class="d-flex justify-content-between">
        <span>Join Date @Model.CreatedOn.ToString("dd/MM/yyyy")</span>
        <br />
    </div>

    <hr />
    <br />

    <div class="d-flex justify-content-around">
        @if (this.User.Identity.Name == Model.Username)
        {
            <h2>My auto parts:</h2>
            <h2>Comments for me:</h2>
        }
        else
        {
            <h2>Added Autoparts:</h2>
            <h2>Comments For User:</h2>
        }
    </div>

    <br />

    <div class="d-flex justify-content-between">
        <div class="d-flex justify-content-between row col-6 border border-light bg-light rounded h-75">
            @foreach (var autopart in Model.Autoparts)
            {
                <partial name="_AutopartPartial" model="autopart" />
            }
        </div>
        <div class="col-6 border-light bg-light rounded">
            @foreach (var comment in Model.CommentsForUser)
            {
                <partial name="_CommentPartial" model="comment" />
            }
            <br />
            @if (this.User.Identity.IsAuthenticated)
            {
                <div class="bg-light">
                    <div class="text-center">
                        <textarea placeholder="Leave a comment..." id="commentContent" class="w-75 border rounded"></textarea>
                    </div>
                    <div class="text-center">
                        <button id="commentSubmitBtn" class="btn btn-primary w-75">Submit</button>
                    </div>
                </div>
            }
        </div>
    </div>
    <hr />
</div>

@section Scripts{
    <script src="~/js/users/usersLib.js"></script>
    <script>
        function gettoken() {
            var token = '@Html.AntiForgeryToken()';
            token = $(token).val();
            return token;
        }

        setupUserDetails(gettoken(), "@Model.Username");
    </script>
}
